#!/usr/bin/env bash

APP_NAME="http"
SERVER_EXECUTABLE_PATH="./build/example/$APP_NAME/server/$APP_NAME""_server"
SLEEP_SECONDS=1

BUILD_SCRIPT_PATH="./script/build"

WEBBENCH_EXECUTABLE_PATH="./bin/webbench"

REPEAT_TIMES=5

if [ $# -gt 1 ]; then
    echo "Usage: $0 <seconds>"
    exit 1
fi

number_of_seconds_to_test=${1:-2} # 2 seconds by default

if ! [[ "$number_of_seconds_to_test" =~ ^-?[0-9]+$ ]]; then
    echo "Invalid input. Please provide a valid integer."

    exit 1
fi

clear

echo "WebBench test time (seconds): $number_of_seconds_to_test"

echo "Building..."

if "$BUILD_SCRIPT_PATH"; then
    clear

    echo "Build success ✔️"
else
    echo "Build failed ❌"

    exit 1
fi

echo ""

sum=0

for ((i = 1; i <= REPEAT_TIMES; i++)); do
    echo "--------------------------------"

    echo "Iteration: $i"

    "$SERVER_EXECUTABLE_PATH" &

    pid=$!

    echo "Server started, pid: $pid"

    echo "Sleep for $SLEEP_SECONDS second(s) for the server to be fully initialized..."

    sleep "$SLEEP_SECONDS"

    echo "Resumed"

    echo "Running WebBench..."

    succeed_number="$(
        "$WEBBENCH_EXECUTABLE_PATH" -t "$number_of_seconds_to_test" -c 1000 -2 --get http://127.0.0.1:8080/ 2>&1 | tail -n 1 | grep -oP '(?<=Requests: )\d+(?= succeed)'
    )"

    echo "WebBench finished, killing server..."

    kill -INT "$pid"

    echo "Sleep for $SLEEP_SECONDS second(s) for the server to be fully shutdown..."

    sleep "$SLEEP_SECONDS"

    echo "Resumed"

    echo "Succeed number: $succeed_number"

    sum=$((sum + succeed_number))
done

average=$((sum / REPEAT_TIMES))
average=$((average / number_of_seconds_to_test))

echo ""

echo "Average: $average"
