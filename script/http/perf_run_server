#!/usr/bin/env bash

PERF_DATA_FILE_PATH="./perf.data"
PERF_SCRIPT_OUTPUT_FILE_PATH='./perf.data.out'
FOLDED_PERF_SCRIPT_OUTPUT_FILE_PATH='./perf.data.out.folded'
FLAME_GRAPH_SVG_OUTPUT_FILE_PATH='./flamegraph.svg'

clear

echo "Elevating permission for perf..."

sudo sysctl kernel.perf_event_paranoid=1
sudo sysctl kernel.kptr_restrict=0

APP_NAME="http"
SERVER_EXECUTABLE_PATH="./build/example/$APP_NAME/server/$APP_NAME""_server"

"$SERVER_EXECUTABLE_PATH" &

server_pid="$!"

echo "Server started (in the background), PID: $server_pid"

echo "Perf started"

echo "Perf is now recording..."

perf record -F 99 -g --pid "$server_pid" >/dev/null 2>&1

# [execution blocks here]

# run WebBench to test, and then kill the server to stop perf from recording

# [execution re-starts here]

echo "Recording stopped, statistics written to \`$PERF_DATA_FILE_PATH\`"

echo "Processing... (\`$PERF_DATA_FILE_PATH\` -> \`$PERF_SCRIPT_OUTPUT_FILE_PATH\`)"

perf script >"$PERF_SCRIPT_OUTPUT_FILE_PATH"

echo "Folding... (\`$PERF_SCRIPT_OUTPUT_FILE_PATH\` -> \`$FOLDED_PERF_SCRIPT_OUTPUT_FILE_PATH\`)"

../FlameGraph/stackcollapse-perf.pl "$PERF_SCRIPT_OUTPUT_FILE_PATH" >"$FOLDED_PERF_SCRIPT_OUTPUT_FILE_PATH"

echo "Drawing... (\`$FOLDED_PERF_SCRIPT_OUTPUT_FILE_PATH\` -> \`$FLAME_GRAPH_SVG_OUTPUT_FILE_PATH\`)"

../FlameGraph/flamegraph.pl "$FOLDED_PERF_SCRIPT_OUTPUT_FILE_PATH" >"$FLAME_GRAPH_SVG_OUTPUT_FILE_PATH"

echo "Cleaning..."

rm "$PERF_DATA_FILE_PATH" "$PERF_SCRIPT_OUTPUT_FILE_PATH" "$FOLDED_PERF_SCRIPT_OUTPUT_FILE_PATH"

echo "Completed, result is at \`$FLAME_GRAPH_SVG_OUTPUT_FILE_PATH\`. ✔️"
